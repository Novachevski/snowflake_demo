# This is a basic workflow to help you get started with Actions

name: CI

permissions:
  contents: write

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  SNOWSQL_PWD: ${{secrets.SNOWFLAKE_PASSWORD}}
  SNOWFLAKE_ACCOUNT: ${{secrets.SNOWFLAKE_ACCOUNT}}
  SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER}}
  SNOWFLAKE_PASSWORD: ${{secrets.SNOWFLAKE_PASSWORD}}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  
  env-dev:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Install terraform
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install terraform

      - uses: actions/checkout@v3
      - name: create dev env
        # working-directory: snowflake-clone/
        run: |
          ls -la
          terraform -chdir=snowflake_clone/ init 
          terraform -chdir=snowflake_clone/ apply -auto-approve

  deploy-dev:
    needs: env-dev
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v3 
      - name: Install snowsql 
        run: |
              curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.32-linux_x86_64.bash
              SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.32-linux_x86_64.bash
              source ~/.profile

      - name: Run SQL scripts
        run: |
              source ~/.profile
              ls -la
              snowsql -a AUFDSKR-SO14294 -u novachevski -f scripts/migrate/V006_insert_more_data-dev.sql
            

  env-qa:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: qa
    steps:
      - uses: actions/checkout@v3
      - name: Install snowsql 
        run: |
              curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.32-linux_x86_64.bash
              SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.32-linux_x86_64.bash
              source ~/.profile

      - name: Clone for QA
        run: |
              source ~/.profile         
              snowsql -a AUFDSKR-SO14294 -u novachevski -D env=dev -f scripts/clone/clone_db_sf_tuts_qa.sql
  #
  # inventory:
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #    - uses: actions/checkout@v3 
  #    - name: update inventory 
  #      working-directory: snowflake-inventory/
  #      run: |
  #             sudo apt install openjdk-11-jdk
  #             sudo apt install graphviz
  #             java -jar schemaspy.jar -configFile config/snowflake.properties -debug -t snowflake -account AUFDSKR-SO14294 -role ACCOUNTADMIN -warehouse SF_TUTS_WH  -dp jdbc/snowflake-jdbc-3.0.14.jar -o output/
  #
  #    - name: Deploy 
  #      uses: JamesIves/github-pages-deploy-action@v4
  #      with:
  #         folder: snowflake-inventory/output
  #
  # # build:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3
  #
  #     # Runs a set of commands using the runners shell
  #     - name: Run SQL scripts
  #       run: |
  #             source ~/.profile         
  #             for file in "scripts"/*; do
  #               echo "Processing file: $file"
  #               snowsql -a AUFDSKR-SO14294 -u novachevski -f $file
  #             done
